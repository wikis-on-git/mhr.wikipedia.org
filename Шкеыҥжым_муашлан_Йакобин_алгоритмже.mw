'''Шкензначенийжым муашлан Йакоби лӱмеш алгоритм''' — вещественный симметричный [[Матрице|матрицын]] чыла шкен значенийжым да чыла шкен вектор-влакым муашлан [[шотпал йӧн]]. Тиде йӧным Карл Густав Йакоб Йакоби икымше гана [[1846]] ийыште темлен.

==Алгоритм==
Ӱлно возымо алгоритм Якоби йӧным ончыкта. Тудо C++ йылме дене возымо. Тиде алгоритм шкензначенийжым гына муэш. Шкенвекторжым муашлат керек-могай СЛАУ рашемдашлан алгоритмым кучаш лиеш. Мутлан, ик эн изи алгоритм - [[Гаус йӧн]]. Тиде йӧн почеш матрицым кумлукан тӱсыш вашталташ кӱлеш, варажым шкенвекторым муаш неле огыл.

<source lang="cpp">
void diagonalize_sym(array<double,2>^ A, int n)
// A - пуымо тӱҥалтыш вещественный матрице. Тушто ошкыш-ошкыл дене
//     шкензначенийже-влак тӱҥ диагональыште шогаш тӱҥалат.
// n - матрицын кугытшо.
{
	int k, done; 
	double discr, aii, aij, ajj, aik, ajk, v1, v2, norm; 
 
	do
	{
		done = 1; 
		for (int i=0;i<n;i++) // тиде кок цикл-влак обнуляемый тӱҥлык-влакым ойырен налат
			for (int j=0;j<i;j++)
			{ 
				aii = A[i,i];
				aij = A[i,j];
				ajj = A[j,j];
				if (Math::Abs(aij)>1e-100)
				{ 
					discr = Math::Sqrt((aii-ajj)*(aii-ajj)+4*aij*aij); 
					/* Шкензначенийжым шотлаш. */
					if (aii+ajj>0)
					{ 
						A[i,i] = (aii+ajj+discr)/2;
						A[j,j] = (aii*ajj-aij*aij)/A[i,i]; 
					}
					else
					{ 
						A[j,j] = (aii+ajj-discr)/2;
						A[i,i] = (aii*ajj-aij*aij)/A[j,j];
					}
					A[i,j] = 0;
					A[j,i] = 0;

					if (aii>ajj)
					{ 
						v1 = (aii-ajj+discr)/2;
						v2 = aij;
					}
					else
					{
						v1 = aij;
						v2 = (ajj-aii+discr)/2;
					}
					norm = Math::Sqrt(v1*v1+v2*v2);
					v1 /= norm;
					v2 /= norm;
					/* Вашталтымашым кодшо верыш матрицыш пурташ. */
					for (k=0;k<n;k++) if (k!=i && k!=j)
					{
						aik = A[i,k];
						ajk = A[j,k];
						A[i,k] = v1*aik+v2*ajk;
						A[k,i] = v1*aik+v2*ajk;
						A[j,k] = -v2*aik+v1*ajk;
						A[k,j] = -v2*aik+v1*ajk;
					}
					done = 0;
				}
			}
	}
	while (!done);
</source>

Аҥгличан википедийыште эше вес алгоритм уло. Тудо матиматик семын возымо, шкензначенийжым да шкенвекторжым муэш, но тудо шкензначенийже-влакым южгунам муын ок керт, туткынрак умылымашым алгоритм почешыште лудса.

==Обнуляемый тӱҥлыкым кузе ойырен налаш лиеш==
Чылаже кум йӧн дене лиеш тудым ойырен налаш:
* Эн кугым абсолют значенийже дене диагоналиште шогышо огыл тӱҥлыкым налаш лиеш.
* Цикл дене обнуляемый тӱҥлыкым налаш лиеш. Тудым тыге налат:

(1,2), (1,3), ..., (1,n), (2,3), (2,4), ..., (2,n), (3,4), ..., (3,n), ..., (n-1,n)
* Оптимальный тӱҥлыкым налыме йӧн. Тӱҥалашлан корном муаш кӱлеш. Тиде корнышто диагоналиште шогышо огыл тӱҥлыкын сумма эн кугу лийшаш. А варажым тиде корнышто эн кугым абсолют значенийже дене тӱҥлыкым муат. Тиде тӱҥлыкым обнулять кӱлеш.

==Негыз==
* Практикум на ЭВМ. Методы решения линейных систем и нахождения собственных значений. К.Ю. Богачев. Моско, 1998.

[[Категорий: Шотпал йӧн]]

[[de:Jacobi-Verfahren (Eigenwerte)]]
[[en:Jacobi eigenvalue algorithm]]
[[nl:Jacobi-eigenwaarde algoritme]]
